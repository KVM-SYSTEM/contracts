syntax = "proto3";

package core;

option go_package = "github.com/KVM-SYSTEM/contracts;core_server";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";


//Models
message Measure {
    string _id = 1;
    string name = 2;
    string full_name = 3;
    google.protobuf.Timestamp createdAt = 4;
    google.protobuf.Timestamp updatedAt = 5; 
}


message Material {
    string _id = 1;
    string title = 2;
    Measure measure = 3;
    int64 cost = 4;
    int64 weight = 5;
    string manufacturer = 6;
    string barcode = 7;
    string img = 8;
    string sectionId = 9;
    google.protobuf.Timestamp createdAt = 10;
    google.protobuf.Timestamp updatedAt = 11; 
}
message Price {
    string _id = 1;
    string title = 2;
    string fullTitle = 3;
    Measure measure = 4;
    // string pricesCategory = 5;
    // string pricesGroup = 6;
    // string pricesDivide = 7;
    repeated Material materials = 5;
    int64 cost = 6;
    int64 markup = 7;
    bool isDefault = 8;
}

message Divide {
    string _id = 1;
    string title = 2;
    string description = 3;
    int32 index = 4;
    bool  isDefault = 5;
    string user = 6;
    bool isOnDelete = 7;
}

message Section {
    string _id = 1;
    string title = 2;
}

message User {
    string _id = 1;
    string phone = 2;
    string deleteDate = 3;
    string email = 4;
    string password = 5;
    bool isEmailConfirmed = 6;
    string role = 7;
    string internalToken = 8;
    repeated string chosenTemplates = 9;
}

message Object {
    string _id = 1;
    string description = 2;
    string contactPerson = 3;
    string address = 4;
    string status = 5;
    repeated string images = 6; // Используется repeated для массивов
    double budget = 7; // Используется double для float64, включая null через wrapper types в proto3
    double square = 8; // Аналогично budget
    string client = 9;
    int32 received = 10; // int в Go обычно соответствует int32 в protobuf
    google.protobuf.Timestamp deadline = 11; // Для времени используется Timestamp из google/protobuf/timestamp.proto
    string user = 12;
    google.protobuf.Timestamp createdAt = 13;
    google.protobuf.Timestamp updatedAt = 14;
    bool isDefault = 15;
}

message Status {
    string _id = 1;
    string name = 2;
}

message GetManyUsersRes{
    repeated User users = 1;
}

//Get Status
message GetStatusReq{
    string _id = 1;
}

message GetStatusRes{
    Status status = 1;
}
//Get Object
message GetObjectReq{
    string _id = 1;
}

message GetObjectRes{
    Object object = 1;
}

message GetDefaultObjectReq{
    string userId = 1;
}

message GetDefaultObjectRes{
    Object object = 1;
}

//Get Material
message GetMaterialReq {
    string _id = 1;
}
message GetMaterialRes {
    Material material = 1;
}
message GetManyMaterialRes {
    repeated Material materials = 1;
}
//Add Material
message AddMaterialReq {
    string title = 1;
    string measure = 2;
    int64 cost = 3;
    int64 weight = 4;
    string manufacturer = 5;
    string barcode = 6;
    string img = 7;
    string sectionId = 8;
}
message AddMaterialRes {
    string _id = 1;
}

//Add Divide
message AddDivideReq {
    string title = 3;
    repeated Price prices = 4;
    float costOfWork = 5;
    float costOfMaterials = 6;
    float sum = 7;
    string img = 2;
    string pricesSections = 8;
}

message AddDivideRes{
    string id = 1;
}

//Delete Material 
message DeleteMaterialReq {
    string _id = 1;
}


// Get Measure
message GetMeasureReq{
    string _id = 1;
}

message GetMeasureRes{
    Measure measure = 1;
}

message GetMeasureByNameReq{
    string name = 1;
}

message GetMeasureByNameRes{
    Measure measure = 1;
}

//Get prices

message GetPriceReq {
    string _id = 1;
}

message GetPriceRes {
    Price price = 1;
}

message GetManyPricesRes {
    repeated Price prices = 1;
}

//Get Divides
message GetManyDividesRes {
    repeated Divide divides = 1;
}
message GetDivideReq {
    string _id = 1;
}

message GetDivideRes {
    Divide divide = 1;
};

message DeleteDivideReq{
    string id = 1;
}

message DeleteDivideRes{
    bool success = 1;
}

//Get Sections
message GetManySectionsRes {
    repeated Section sections = 1;
}
message GetSectionReq {
    string _id = 1;
}
message GetSectionRes {
    Section section = 1;
};

message GetUserReq {
    string internalToken = 1;
}

message GetUserRes {
    User user = 1;
}

message FavoriteReq {
    string user_id = 1;
    string template_id = 2;
}

message FavoriteRes {
    bool success = 1;
    string message = 2;
}


message UpdateObjectReq{
    string _id = 1;
    Object object = 2;
}

message UpdateObjectRes{
    bool success = 1;
}


service MaterialService{
    rpc Add(AddMaterialReq) returns (AddMaterialRes);
    rpc Get(GetMaterialReq) returns (GetMaterialRes);
    rpc GetMany(google.protobuf.Empty) returns (GetManyMaterialRes);
    rpc Delete(DeleteMaterialReq) returns (google.protobuf.Empty);
}

service PriceService{
    rpc Get(GetPriceReq) returns (GetPriceRes);
    rpc GetMany(google.protobuf.Empty) returns (GetManyPricesRes);
}

service DivideService{
    rpc Get(GetDivideReq) returns (GetDivideRes);
}

service SectionService{
    rpc GetMany(google.protobuf.Empty) returns (GetManySectionsRes);
    rpc Get(GetSectionReq) returns (GetSectionRes);
}

service UserService {
    rpc Get(GetUserReq) returns (GetUserRes);
    rpc GetMany(google.protobuf.Empty) returns (GetManyUsersRes);
    rpc AddFavorite(FavoriteReq) returns (FavoriteRes);
    rpc RemoveFavorite(FavoriteReq) returns (FavoriteRes);
}

service MeasureService{
    rpc Get(GetMeasureReq) returns (GetMeasureRes);
    rpc GetByName(GetMeasureByNameReq) returns (GetMeasureByNameRes);
}

service ObjectService{
    rpc Get(GetObjectReq) returns (GetObjectRes);
    rpc GetDefault(GetDefaultObjectReq) returns (GetDefaultObjectRes);
    rpc Update(UpdateObjectReq) returns (UpdateObjectRes);
}

service StatusService{
    rpc Get(GetStatusReq) returns (GetStatusRes);
}